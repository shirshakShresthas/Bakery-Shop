/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;
import java.util.ArrayList;
import java.util.LinkedList;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sirjan
 */
public class bakery extends javax.swing.JFrame {

    
    
    /**
     * Creates new form NewJFrame
     */
    public bakery() {
        initComponents();
        setColor(homeBtn);
        resetColor(new JPanel[]{tableBtn,itemBtn});
        setVisible(true);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        itemBtn = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        homeBtn = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tableBtn = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        bakeryName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        address = new javax.swing.JLabel();
        phnNumber = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        email = new javax.swing.JLabel();
        centerPanel = new javax.swing.JPanel();
        home = new javax.swing.JPanel();
        bakeryItem = new javax.swing.JPanel();
        deleteBtn = new javax.swing.JButton();
        binarySearch = new javax.swing.JTextField();
        btnBinary = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        btnCake = new javax.swing.JRadioButton();
        btnMuffins = new javax.swing.JRadioButton();
        btnCookies = new javax.swing.JRadioButton();
        btnBreads = new javax.swing.JRadioButton();
        btnDoughnuts = new javax.swing.JRadioButton();
        btnBrownies = new javax.swing.JRadioButton();
        linearSearch = new javax.swing.JTextField();
        searchItem = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        addItem = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        itemID = new javax.swing.JTextField();
        itemName = new javax.swing.JTextField();
        itemIngredients = new javax.swing.JTextField();
        itemQuantity = new javax.swing.JTextField();
        itemPrice = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        comboCategory = new javax.swing.JComboBox<>();
        fF = new javax.swing.JCheckBox();
        wC = new javax.swing.JCheckBox();
        hC = new javax.swing.JCheckBox();
        jLabel21 = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenu = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        helpMenu = new javax.swing.JMenuItem();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ITEM ID", "ITEM NAME", "CATEGORY", "STAR INGREDENTS", "QUANTITY", "PRICE", "TOPPINGS"
            }
        ));
        jTable1.setFocusable(false);
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jTable1.setIntercellSpacing(new java.awt.Dimension(0, 0));
        jTable1.setRowHeight(25);
        jTable1.setSelectionBackground(new java.awt.Color(204, 51, 0));
        jTable1.setShowVerticalLines(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Delicious Bakery");
        setLocation(new java.awt.Point(250, 50));
        setResizable(false);

        jPanel3.setBackground(new java.awt.Color(204, 51, 0));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(142, 67, 50));

        itemBtn.setBackground(new java.awt.Color(153, 51, 0));
        itemBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bakery.this.mouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                itemBtnMousePressed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_home_page_25px.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ITEM ENROLLMENT");

        javax.swing.GroupLayout itemBtnLayout = new javax.swing.GroupLayout(itemBtn);
        itemBtn.setLayout(itemBtnLayout);
        itemBtnLayout.setHorizontalGroup(
            itemBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemBtnLayout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addContainerGap())
        );
        itemBtnLayout.setVerticalGroup(
            itemBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        homeBtn.setBackground(new java.awt.Color(153, 51, 0));
        homeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bakery.this.mouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                homeBtnMousePressed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_home_page_25px.png"))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("HOME");

        javax.swing.GroupLayout homeBtnLayout = new javax.swing.GroupLayout(homeBtn);
        homeBtn.setLayout(homeBtnLayout);
        homeBtnLayout.setHorizontalGroup(
            homeBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeBtnLayout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        homeBtnLayout.setVerticalGroup(
            homeBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeBtnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(homeBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        tableBtn.setBackground(new java.awt.Color(153, 51, 0));
        tableBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bakery.this.mouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableBtnMousePressed(evt);
            }
        });

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_home_page_25px.png"))); // NOI18N

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("BAKERY ITEMS");

        javax.swing.GroupLayout tableBtnLayout = new javax.swing.GroupLayout(tableBtn);
        tableBtn.setLayout(tableBtnLayout);
        tableBtnLayout.setHorizontalGroup(
            tableBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableBtnLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );
        tableBtnLayout.setVerticalGroup(
            tableBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableBtnLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(tableBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bakeryName.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        bakeryName.setForeground(new java.awt.Color(255, 255, 255));
        bakeryName.setText("DELICIOUS BAKERY");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_marker_20px.png"))); // NOI18N

        address.setForeground(new java.awt.Color(255, 255, 255));
        address.setText("Durbarmarg, Kathmandu");

        phnNumber.setForeground(new java.awt.Color(255, 255, 255));
        phnNumber.setText("01-4437165");

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_phone_20px.png"))); // NOI18N

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_email_send_20px.png"))); // NOI18N

        email.setForeground(new java.awt.Color(255, 255, 255));
        email.setText("deliciousbakery@gmail.com");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bakeryName, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(phnNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(22, 22, 22))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(homeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(tableBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(itemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bakeryName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phnNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(email, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(homeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tableBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        jPanel3.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 960, 210));

        centerPanel.setLayout(new java.awt.CardLayout());

        home.setBackground(new java.awt.Color(210, 153, 108));

        javax.swing.GroupLayout homeLayout = new javax.swing.GroupLayout(home);
        home.setLayout(homeLayout);
        homeLayout.setHorizontalGroup(
            homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 951, Short.MAX_VALUE)
        );
        homeLayout.setVerticalGroup(
            homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 360, Short.MAX_VALUE)
        );

        centerPanel.add(home, "card4");

        bakeryItem.setBackground(new java.awt.Color(195, 124, 77));

        deleteBtn.setText("Delete");
        deleteBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        btnBinary.setText("Search by Price");
        btnBinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBinaryActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(240, 240, 240));
        jLabel22.setText("View Items  :");

        buttonGroup1.add(btnCake);
        btnCake.setText("Cakes");
        btnCake.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCakeActionPerformed(evt);
            }
        });

        buttonGroup1.add(btnMuffins);
        btnMuffins.setText("Muffins");
        btnMuffins.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMuffinsActionPerformed(evt);
            }
        });

        buttonGroup1.add(btnCookies);
        btnCookies.setText("Cookies");
        btnCookies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCookiesActionPerformed(evt);
            }
        });

        buttonGroup1.add(btnBreads);
        btnBreads.setText("Breads");
        btnBreads.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBreadsActionPerformed(evt);
            }
        });

        buttonGroup1.add(btnDoughnuts);
        btnDoughnuts.setText("Doughnuts");
        btnDoughnuts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoughnutsActionPerformed(evt);
            }
        });

        buttonGroup1.add(btnBrownies);
        btnBrownies.setText("Brownies");
        btnBrownies.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowniesActionPerformed(evt);
            }
        });

        searchItem.setText("Search by Item");
        searchItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchItemActionPerformed(evt);
            }
        });

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ITEM ID", "ITEM NAME", "CATEGORY", "STAR INGREDIENT", "QUANTITY", "PRICE", "TOPPINGS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.setGridColor(new java.awt.Color(255, 255, 255));
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable);
        if (jTable.getColumnModel().getColumnCount() > 0) {
            jTable.getColumnModel().getColumn(0).setPreferredWidth(15);
            jTable.getColumnModel().getColumn(1).setResizable(false);
            jTable.getColumnModel().getColumn(1).setPreferredWidth(30);
            jTable.getColumnModel().getColumn(2).setResizable(false);
            jTable.getColumnModel().getColumn(2).setPreferredWidth(30);
            jTable.getColumnModel().getColumn(4).setResizable(false);
            jTable.getColumnModel().getColumn(4).setPreferredWidth(20);
            jTable.getColumnModel().getColumn(5).setPreferredWidth(20);
            jTable.getColumnModel().getColumn(6).setResizable(false);
            jTable.getColumnModel().getColumn(6).setPreferredWidth(160);
        }

        javax.swing.GroupLayout bakeryItemLayout = new javax.swing.GroupLayout(bakeryItem);
        bakeryItem.setLayout(bakeryItemLayout);
        bakeryItemLayout.setHorizontalGroup(
            bakeryItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bakeryItemLayout.createSequentialGroup()
                .addGroup(bakeryItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(binarySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(linearSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(bakeryItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchItem)
                    .addComponent(btnBinary))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCake)
                .addGap(30, 30, 30)
                .addComponent(btnMuffins)
                .addGap(32, 32, 32)
                .addComponent(btnCookies)
                .addGap(16, 16, 16)
                .addComponent(btnBreads)
                .addGap(18, 18, 18)
                .addComponent(btnDoughnuts)
                .addGap(18, 18, 18)
                .addComponent(btnBrownies)
                .addContainerGap(54, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bakeryItemLayout.createSequentialGroup()
                .addGap(382, 382, 382)
                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, bakeryItemLayout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        bakeryItemLayout.setVerticalGroup(
            bakeryItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bakeryItemLayout.createSequentialGroup()
                .addGroup(bakeryItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bakeryItemLayout.createSequentialGroup()
                        .addGroup(bakeryItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(binarySearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBinary))
                        .addGap(4, 4, 4)
                        .addGroup(bakeryItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(linearSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchItem)))
                    .addGroup(bakeryItemLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(bakeryItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCake)
                            .addComponent(btnMuffins)
                            .addComponent(btnCookies)
                            .addComponent(btnBreads)
                            .addComponent(btnDoughnuts)
                            .addComponent(btnBrownies)
                            .addComponent(jLabel22))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        centerPanel.add(bakeryItem, "card3");

        addItem.setBackground(new java.awt.Color(235, 204, 171));

        jPanel2.setBackground(new java.awt.Color(235, 204, 171));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Item Detail"));

        jLabel8.setText("ITEM ID");

        jLabel9.setText("ITEM NAME");

        jLabel10.setText("CATEGORY");

        jLabel11.setText("STAR INGREDIENTS");

        jLabel19.setText("QUANTITY");

        jLabel20.setText("PRICE");

        itemID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemIDKeyPressed(evt);
            }
        });

        itemName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemNameKeyPressed(evt);
            }
        });

        itemIngredients.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemIngredientsKeyPressed(evt);
            }
        });

        itemQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemQuantityKeyPressed(evt);
            }
        });

        itemPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemPriceKeyPressed(evt);
            }
        });

        addBtn.setText("Add");
        addBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        clearBtn.setText("Clear");
        clearBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        comboCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Category", "Cakes", "Muffins", "Breads", "Cookies", "Doughnuts", "Brownies" }));

        fF.setText("French Fries");

        wC.setText("Whipping Cream");

        hC.setText("Hot Chocolate");

        jLabel21.setText("TOPPINGS");

        backBtn.setText("Back");
        backBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(comboCategory, 0, 153, Short.MAX_VALUE)
                                .addComponent(itemIngredients)
                                .addComponent(itemQuantity)
                                .addComponent(itemPrice))
                            .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemID, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(backBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(fF, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(wC)
                        .addGap(18, 18, 18)
                        .addComponent(hC, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(itemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboCategory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(itemIngredients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(itemQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(itemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(clearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fF)
                            .addComponent(wC)
                            .addComponent(hC)))
                    .addComponent(jLabel21))
                .addContainerGap(115, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout addItemLayout = new javax.swing.GroupLayout(addItem);
        addItem.setLayout(addItemLayout);
        addItemLayout.setHorizontalGroup(
            addItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addItemLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(202, Short.MAX_VALUE))
        );
        addItemLayout.setVerticalGroup(
            addItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addItemLayout.createSequentialGroup()
                .addGap(271, 271, 271)
                .addComponent(jLabel7)
                .addContainerGap(89, Short.MAX_VALUE))
            .addGroup(addItemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        centerPanel.add(addItem, "card4");

        jPanel3.add(centerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 950, 360));

        jMenuBar1.setBackground(new java.awt.Color(255, 102, 51));
        jMenuBar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuBar1.setForeground(new java.awt.Color(255, 102, 51));

        fileMenu.setText("File");

        openMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openMenu.setText("Open");
        openMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuActionPerformed(evt);
            }
        });
        fileMenu.add(openMenu);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem2);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Help");

        helpMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        helpMenu.setText("Help");
        helpMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpMenuActionPerformed(evt);
            }
        });
        editMenu.add(helpMenu);

        jMenuBar1.add(editMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 948, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBtnMousePressed
       
        setColor(tableBtn);
        resetColor(new JPanel[]{homeBtn,itemBtn});
         
    }//GEN-LAST:event_tableBtnMousePressed

    private void itemBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemBtnMousePressed
        
        setColor(itemBtn);
        resetColor(new JPanel[]{homeBtn,tableBtn});
        
    }//GEN-LAST:event_itemBtnMousePressed

    private void homeBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeBtnMousePressed
        
        setColor(homeBtn);
        resetColor(new JPanel[]{tableBtn,itemBtn});
        
        
    }//GEN-LAST:event_homeBtnMousePressed

    private void mouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mouseClicked

        if(evt.getSource()==homeBtn){
            home.setVisible(true);
            addItem.setVisible(false);
            bakeryItem.setVisible(false);
        }
        if(evt.getSource()==itemBtn){
            home.setVisible(false);
            addItem.setVisible(true);
            bakeryItem.setVisible(false);
        }
        if(evt.getSource()==tableBtn){
            home.setVisible(false);
            addItem.setVisible(false);
            bakeryItem.setVisible(true);
        }
    }//GEN-LAST:event_mouseClicked

    private void itemIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemIDKeyPressed
        char dat=evt.getKeyChar();
        System.out.println(dat);

        if(Character.isLetter(dat)){
            itemID.setEditable(false);
        }else{
            itemID.setEditable(true);
        }
        int c=evt.getKeyCode();
        if(!(c>47 && c<58 || c==8)){
            itemID.setEditable(false);
        }else{
            System.out.println(c);
            itemID.setEditable(true);
        }
        String a=itemID.getText();
    }//GEN-LAST:event_itemIDKeyPressed

    private void itemNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemNameKeyPressed
        String b=itemName.getText();
        if (b.length()==0){
            int a=evt.getKeyCode();
            if(a==32){
                itemName.setEditable(false);
            }else{
                itemName.setEditable(true);
            }
        }
    }//GEN-LAST:event_itemNameKeyPressed

    private void itemIngredientsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemIngredientsKeyPressed
        String b=itemIngredients.getText();
        if (b.length()==0){
            int a=evt.getKeyCode();
            if(a==32){
                itemIngredients.setEditable(false);
            }else{
                itemIngredients.setEditable(true);
            }
        }
    }//GEN-LAST:event_itemIngredientsKeyPressed

    private void itemQuantityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemQuantityKeyPressed
        char dat=evt.getKeyChar();
        System.out.println(dat);

        if(Character.isLetter(dat)){
            itemQuantity.setEditable(false);
        }else{
            itemQuantity.setEditable(true);
        }
        int c=evt.getKeyCode();
        if(!(c>47 && c<58 || c==8)){
            itemQuantity.setEditable(false);
        }else{
            System.out.println(c);
            itemQuantity.setEditable(true);
        }
        String a=itemQuantity.getText();
    }//GEN-LAST:event_itemQuantityKeyPressed

    private void itemPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemPriceKeyPressed
        char dat=evt.getKeyChar();
        System.out.println(dat);

        if(Character.isLetter(dat)){
            itemPrice.setEditable(false);
        }else{
            itemPrice.setEditable(true);
        }
        int c=evt.getKeyCode();
        if(!(c>47 && c<58 || c==8)){
            itemPrice.setEditable(false);
        }else{
            System.out.println(c);
            itemPrice.setEditable(true);
        }
        String a=itemPrice.getText();
    }//GEN-LAST:event_itemPriceKeyPressed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        boolean flag = checkItemID();
        if(flag==false)
        {
            addItem();
            JOptionPane.showMessageDialog(rootPane, "Successfully Added");
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Item ID Already Exist.");
        }
        
    }//GEN-LAST:event_addBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        deleteItem();
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        clearValue();
    }//GEN-LAST:event_clearBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
            home.setVisible(true);
            addItem.setVisible(false);
            bakeryItem.setVisible(false);
    }//GEN-LAST:event_backBtnActionPerformed

    private void openMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuActionPerformed
      JFileChooser chooser = new JFileChooser();
      chooser.showOpenDialog(null);
      File f = chooser.getSelectedFile();
      if (f == null)
      {
          JOptionPane.showMessageDialog(null, "PLEASE SELECT  FILE", "Error", JOptionPane.ERROR_MESSAGE); 
      }
      else
      {
          String filename = f.getAbsolutePath();
          try {
              importFromTxt(filename);
          }
          catch (Exception ex) {
                Logger.getLogger(bakery.class.getName()).log(Level.SEVERE, null, ex);
          }
      }
    }//GEN-LAST:event_openMenuActionPerformed

    private void btnCakeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCakeActionPerformed
        String cc= "";
        if(btnCake.isSelected()){
          cc="Cakes";
       
          int searchIndex = 2;
          int rows = jTable.getRowCount();
          int datarows = 0;
          int n = 1;
          
          for(int i = 0;i< rows ; i++){
          if((jTable.getValueAt(i, searchIndex)) == null){ break;}
          datarows++;
          }
          
          String displayItem = "";
          for (int i = 0; i < datarows; i++)
                if(((String)jTable.getValueAt(i, searchIndex)).equals(cc)){
                    displayItem += n + ") "+" "+((String) jTable.getValueAt(i, 1))+"\n";
                    n++;
                    }
          
          if(!"".equals(displayItem))
              JOptionPane.showMessageDialog(this,displayItem,(n-1)+" Items in "+cc+" category:",JOptionPane.INFORMATION_MESSAGE);
          else
              JOptionPane.showMessageDialog(this,"There are not any items related to "+cc+" Category ","Message",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnCakeActionPerformed

    private void btnMuffinsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMuffinsActionPerformed
         String cc= "";
        if(btnMuffins.isSelected()){
          cc="Muffins";
       
          int searchIndex = 2;
          int rows = jTable.getRowCount();
          int datarows = 0;
          int n = 1;
          
          for(int i = 0;i< rows ; i++){
          if((jTable.getValueAt(i, searchIndex)) == null){ break;}
          datarows++;
          }
          
          String displayItem = "";
          for (int i = 0; i < datarows; i++)
                if(((String)jTable.getValueAt(i, searchIndex)).equals(cc)){
                    displayItem += n + ") "+" "+((String) jTable.getValueAt(i, 1))+"\n";
                    n++;
                    }
          
          if(!"".equals(displayItem))
              JOptionPane.showMessageDialog(this,displayItem,(n-1)+" Items in "+cc+" category:",JOptionPane.INFORMATION_MESSAGE);
          else
              JOptionPane.showMessageDialog(this,"There are not any items related to "+cc+" Category ","Message",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnMuffinsActionPerformed

    private void btnCookiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCookiesActionPerformed
         String cc= "";
        if(btnCookies.isSelected()){
          cc="Cookies";
       
          int searchIndex = 2;
          int rows = jTable.getRowCount();
          int datarows = 0;
          int n = 1;
          
          for(int i = 0;i< rows ; i++){
          if((jTable.getValueAt(i, searchIndex)) == null){ break;}
          datarows++;
          }
          
          String displayItem = "";
          for (int i = 0; i < datarows; i++)
                if(((String)jTable.getValueAt(i, searchIndex)).equals(cc)){
                    displayItem += n + ") "+" "+((String) jTable.getValueAt(i, 1))+"\n";
                    n++;
                    }
          
          if(!"".equals(displayItem))
              JOptionPane.showMessageDialog(this,displayItem,(n-1)+" Items in "+cc+" category:",JOptionPane.INFORMATION_MESSAGE);
          else
              JOptionPane.showMessageDialog(this,"There are not any items related to "+cc+" Category ","Message",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnCookiesActionPerformed

    private void btnBreadsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBreadsActionPerformed
        String cc= "";
        if(btnBreads.isSelected()){
          cc="Breads";
       
          int searchIndex = 2;
          int rows = jTable.getRowCount();
          int datarows = 0;
          int n = 1;
          
          for(int i = 0;i< rows ; i++){
          if((jTable.getValueAt(i, searchIndex)) == null){ break;}
          datarows++;
          }
          
          String displayItem = "";
          for (int i = 0; i < datarows; i++)
                if(((String)jTable.getValueAt(i, searchIndex)).equals(cc)){
                    displayItem += n + ") "+" "+((String) jTable.getValueAt(i, 1))+"\n";
                    n++;
                    }
          
          if(!"".equals(displayItem))
              JOptionPane.showMessageDialog(this,displayItem,(n-1)+" Items in "+cc+" category:",JOptionPane.INFORMATION_MESSAGE);
          else
              JOptionPane.showMessageDialog(this,"There are not any items related to "+cc+" Category ","Message",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnBreadsActionPerformed

    private void btnDoughnutsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoughnutsActionPerformed
         String cc= "";
        if(btnDoughnuts.isSelected()){
          cc="Doughnuts";
       
          int searchIndex = 2;
          int rows = jTable.getRowCount();
          int datarows = 0;
          int n = 1;
          
          for(int i = 0;i< rows ; i++){
          if((jTable.getValueAt(i, searchIndex)) == null){ break;}
          datarows++;
          }
          
          String displayItem = "";
          for (int i = 0; i < datarows; i++)
                if(((String)jTable.getValueAt(i, searchIndex)).equals(cc)){
                    displayItem += n + ") "+" "+((String) jTable.getValueAt(i, 1))+"\n";
                    n++;
                    }
          
          if(!"".equals(displayItem))
              JOptionPane.showMessageDialog(this,displayItem,(n-1)+" Items in "+cc+" category:",JOptionPane.INFORMATION_MESSAGE);
          else
              JOptionPane.showMessageDialog(this,"There are not any items related to "+cc+" Category ","Message",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnDoughnutsActionPerformed

    private void btnBrowniesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowniesActionPerformed
        String cc= "";
        if(btnBrownies.isSelected()){
          cc="Brownies";
       
          int searchIndex = 2;
          int rows = jTable.getRowCount();
          int datarows = 0;
          int n = 1;
          
          for(int i = 0;i< rows ; i++){
          if((jTable.getValueAt(i, searchIndex)) == null){ break;}
          datarows++;
          }
          
          String displayItem = "";
          for (int i = 0; i < datarows; i++)
                if(((String)jTable.getValueAt(i, searchIndex)).equals(cc)){
                    displayItem += n + ") "+" "+((String) jTable.getValueAt(i, 1))+"\n";
                    n++;
                    }
          
          if(!"".equals(displayItem))
              JOptionPane.showMessageDialog(this,displayItem,(n-1)+" Items in "+cc+" category:",JOptionPane.INFORMATION_MESSAGE);
          else
              JOptionPane.showMessageDialog(this,"There are not any items related to "+cc+" Category ","Message",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnBrowniesActionPerformed

    private void searchItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchItemActionPerformed
        String searchValue,itemName;
        int row=jTable.getRowCount();
        LinkedList <DataModel> datalist=new LinkedList();
        for(int i=0;i<row;i++){
             if(linearSearch.getText().equals("")){
                 JOptionPane.showMessageDialog(this,"Enter item name to Search ","Message",JOptionPane.WARNING_MESSAGE);
                 break;
             }else{
                  searchValue=linearSearch.getText();
                  itemName=(String) jTable.getValueAt(i,1);
                if(itemName.equals(searchValue)){
                    String id=(String) jTable.getValueAt(i,0);
                    String name=(String) jTable.getValueAt(i,1);
                    String category=(String) jTable.getValueAt(i,2);
                    String starIngredients=(String) jTable.getValueAt(i,3);
                    String quantity=(String) jTable.getValueAt(i,4);
                    String price=(String) jTable.getValueAt(i,5);
                    String toppings=(String) jTable.getValueAt(i,6);
                
                    datalist.add(new DataModel(id,name,category,starIngredients,quantity,price,toppings));
                }else{
                    JOptionPane.showMessageDialog(this,"No items found for given item Name ","Message",JOptionPane.WARNING_MESSAGE);
                    break;
                }
             }
            for(DataModel m:datalist){
               JOptionPane.showMessageDialog(null,"Item ID : " + m.getId()+"\n"+
                                                  "Item Name : " + m.getName()+ "\n"+
                                                  "Item Category : " + m.getCategory()+ "\n"+
                                                  "Item Star Ingredients : " + m.getStarIngredients()+ "\n"+
                                                  "Item Quantity : " + m.getQuantity() +"\n"+
                                                  "Item Price : Rs " + m.getPrice()+"\n"+
                                                  "Item toppings  : " + m.getToppings()+"\n");
                
               break;
            } 
        }
    }//GEN-LAST:event_searchItemActionPerformed

    private void btnBinaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBinaryActionPerformed
        int rows = jTable.getRowCount(); 
        int searchIndex = 5;
        String search =binarySearch.getText();
        int datarows = 0;
        for(int i = 0;i< rows ; i++){
            if((jTable.getValueAt(i, searchIndex)) == null){ break;}
            datarows++;
        }
        if(!"".equals(search) && datarows != 0){
           
            double findItem =Double.parseDouble(binarySearch.getText());
            
            double data[] = new double[datarows];
            
            for(int i = 0;i< datarows ; i++){
                String a = (String) jTable.getValueAt(i, searchIndex);
                data[i]= Double.parseDouble(a);
             }
            System.out.println(Arrays.toString(data));

            
            double searchResult = BinarySearch(data,findItem);
            
            System.out.println(searchResult);
            if(searchResult != -1){
                for (int i = 0; i < jTable.getRowCount(); i++)
                  if(Double.parseDouble((String) jTable.getValueAt(i, searchIndex))== searchResult){
                   String id = (String) jTable.getValueAt(i, 0);
                   String name = (String) jTable.getValueAt(i, 1);
                   String category = (String) jTable.getValueAt(i, 2);
                   String starIngredients = (String) jTable.getValueAt(i, 3);
                   String quantity = (String) jTable.getValueAt(i, 4);
                   String price = (String) jTable.getValueAt(i, 5);
                   String toppings= (String) jTable.getValueAt(i, 6);
                   JOptionPane.showMessageDialog(this,"Item Found Found\n\nPrice: "
                           +price+"\nItem_ID: "+
                           id+"\nName: "+
                           name+"\nCategory: "+
                           category+"\nStar Ingredients: "+
                           starIngredients +"\nQuantity: "+
                           quantity+"\nToppings: "+
                           toppings,"Message",JOptionPane.INFORMATION_MESSAGE);
                   break;
                  }
            }
            else{
             JOptionPane.showMessageDialog(this,"Item Not Found","Message",JOptionPane.WARNING_MESSAGE);
            }
            }
       else{
       JOptionPane.showMessageDialog(this,"Enter price to Search ","Message",JOptionPane.INFORMATION_MESSAGE);
       }
    }//GEN-LAST:event_btnBinaryActionPerformed

    private void helpMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpMenuActionPerformed
           try         
        {
            Desktop.getDesktop().open(new java.io.File("src/main/user manual.pdf"));    
        }catch(IOException e)
        {
        }
    }//GEN-LAST:event_helpMenuActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        String toppings=""; 
        int i = jTable.getSelectedRow();
         DefaultTableModel model = (DefaultTableModel)jTable.getModel();
        if(i >= 0)
        {
            model.setValueAt(itemID.getText(), i, 0);
            model.setValueAt(itemName.getText(), i, 1);
            model.setValueAt(itemIngredients.getText(), i, 3);
            model.setValueAt(itemPrice.getText(), i, 5);
            model.setValueAt(itemQuantity.getText(), i, 4);
            model.setValueAt((String)comboCategory.getSelectedItem(), i, 2);
             if (fF.isSelected()){
            toppings="French Fries" + ","+toppings;
        }
        if (wC.isSelected()){
            toppings="Whipping Cream" + ","+toppings;
        }
        if (hC.isSelected()){
            toppings="Hot Chocolate" + ","+toppings;
        }
        if (toppings.endsWith(",")) {
            toppings= toppings.substring(0, toppings.length() - 1);
        }

            model.setValueAt(toppings, i, 6);
            JOptionPane.showMessageDialog(null, "Succesfully Updated");
            
        }else{
            JOptionPane.showMessageDialog(null, "Error");
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseClicked
       int selectedRow = jTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel)jTable.getModel();
        itemID.setText(model.getValueAt(selectedRow, 0).toString());
        itemName.setText(model.getValueAt(selectedRow, 1).toString());
        comboCategory.setSelectedItem(model.getValueAt(selectedRow, 2).toString());
        itemIngredients.setText(model.getValueAt(selectedRow, 3).toString());
        itemQuantity.setText(model.getValueAt(selectedRow, 4).toString());
        itemPrice.setText(model.getValueAt(selectedRow, 5).toString());
        model.getValueAt(selectedRow, 6);
    }//GEN-LAST:event_jTableMouseClicked
   public void clearValue(){
        itemID.setText(null);
        itemIngredients.setText(null);
        itemName.setText(null);
        itemPrice.setText(null);
        itemQuantity.setText(null);
        fF.setSelected(false);
        wC.setSelected(false);
        hC.setSelected(false);
        comboCategory.setSelectedIndex(0);
   }
   public void addItem(){
        String id=itemID.getText();
        String name=itemName.getText();
        String category=(String)comboCategory.getSelectedItem();
        String starIngredients=itemIngredients.getText();
        String quantity=itemQuantity.getText();
        String price=itemPrice.getText();
        String toppings="";
        if (fF.isSelected()){
            fF.setSelected(true);
            toppings="French Fries" + ","+toppings;
        }
        if (wC.isSelected()){
            wC.setSelected(true);
            toppings="Whipping Cream" + ","+toppings;
        }
        if (hC.isSelected()){
            hC.setSelected(true);
            toppings="Hot Chocolate" + ","+toppings;
        }
        if (toppings.endsWith(",")) {
            toppings= toppings.substring(0, toppings.length() - 1);
        }

        String info[]={id,name,category,starIngredients,quantity,price,toppings};

        int rowCount = jTable.getRowCount();
        int colCount = jTable.getColumnCount();
        int nextRow = 0;
        String s;
        boolean empty = false;
        do{
            s = (String) jTable.getValueAt(nextRow, 0);
            if (s!=null && s.length()!=0){
                nextRow++;
            }else{
                empty = true;
            }
        } while(!empty);
        if("".equals(name) && "".equals(id) && "".equals(category) && "".equals(starIngredients) && "".equals(quantity) && "".equals(price) && "".equals(toppings) ){
            JOptionPane.showMessageDialog(null,"Please Fill All fields");
        } else if("".equals(id)){
            JOptionPane.showMessageDialog(null,"Please Fill Item Id");
        } else if("".equals(name)){
            JOptionPane.showMessageDialog(null,"Please Fill Item Name");
        } else if("".equals(category)){
            JOptionPane.showMessageDialog(null,"Please Fill Item Category");
        } else if("".equals(starIngredients)){
            JOptionPane.showMessageDialog(null,"Please Fill Star Ingredients");
        } else if("".equals(quantity)){
            JOptionPane.showMessageDialog(null,"Please Fill Item Quantity");
        } else if("".equals(price)){
            JOptionPane.showMessageDialog(null,"Please Fill Item Price");
        } else if("".equals(toppings)){
            JOptionPane.showMessageDialog(null,"Please Fill Toppings");
        }else if("".equals(id) || "".equals(name) || "".equals(category) || "".equals(starIngredients) || "".equals(quantity) || "".equals(price) || "".equals(toppings) ){
            JOptionPane.showMessageDialog(null,"Please Fill Missing fields");
        }else{

            for (int i=0;i<colCount;i++){ 
                jTable.setValueAt(info[i], nextRow, i);
            }
        }
   }
   public boolean checkItemID()
    {
        boolean flag = false;
        String id= itemID.getText();
        for(int i=0;i<=jTable.getRowCount();i++)
        {
            if(jTable.getValueAt(i,0).equals(id))
            {
                flag = true;  
                break;
            }            
        }
        return flag;
    }
   
   public void deleteItem(){
       if(jTable.getSelectionModel().isSelectionEmpty())
            {
                JOptionPane.showMessageDialog(this,"Select Item to delete ","Message",JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
            int row = jTable.getSelectedRow();
            int modelRow = jTable.convertRowIndexToModel( row );
            DefaultTableModel model = (DefaultTableModel)jTable.getModel();
             model.removeRow( modelRow );       
        }
        
   }
   public void importTable(String[] data)
    {
        DefaultTableModel models = (DefaultTableModel) jTable.getModel();
        int rowCount = jTable.getRowCount();
        int colCount = jTable.getColumnCount();
        int nextRow = 0;
        boolean emptyFlag = false;
        if (rowCount != 0) 
        {
            
            do 
            {
                if ((jTable.getValueAt(nextRow, 0)) != null) 
                {
                    nextRow++;
                } 
                else 
                {
                    emptyFlag = true;
                    models.addRow(new Object[]{});
                }
            } 
            while (nextRow < rowCount && !emptyFlag);
            clearValue();
            for (int i = 0; i < colCount; i++) 
            {                
                jTable.setValueAt(data[i], nextRow, i);
            }               
              
        }
    }
    
    public void importFromTxt(String fileName) throws Exception
    {
        
        boolean fileFlag = false;
        File file = new File(fileName);
        BufferedReader br = new  BufferedReader(new FileReader(file)); 
        String line;
        while ((line = br.readLine()) != null) 
        {          
            String[] data = line.split(","); 
            if (data.length != 7)
            {
                JOptionPane.showMessageDialog(null, "File Format is Incorrect ", "Error", JOptionPane.ERROR_MESSAGE); 
                break;
            }
            else
            {                
                importTable(data);
                fileFlag = true;               
            }           
        }
        if(fileFlag == true)
        {
            JOptionPane.showMessageDialog(rootPane, "File has been  imported Sucessfully.");        
        }
        
        
    }
   private double BinarySearch (double[] a, double x){  //data array is passed to a array.
    Arrays.sort(a);
    System.out.println(Arrays.toString(a));
    int Size = a.length;
    int start = 0;
    int end = Size-1;
    
    while(start <= end){
        
        int mid = (start+end)/2;
        
        if(a[mid] == x){
            return a[mid];
            }
        else if(x > a[mid]){
            start = mid +1;
        }
        else{
            end = mid-1;
            
        }
        }
    return -1;

    }
        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bakery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bakery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bakery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bakery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new bakery().setVisible(true);
        });
    }
    // swtich color between active buttom
    private void setColor(JPanel pane)
    {
        pane.setBackground(new Color(153,51,0));
    }
    
    // switch color to inactive button
    private void resetColor(JPanel [] pane)
    {
        for(int i=0;i<pane.length;i++){
           pane[i].setBackground(new Color(102,51,0));
           
        } 
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JPanel addItem;
    private javax.swing.JLabel address;
    private javax.swing.JButton backBtn;
    private javax.swing.JPanel bakeryItem;
    private javax.swing.JLabel bakeryName;
    private javax.swing.JTextField binarySearch;
    private javax.swing.JButton btnBinary;
    private javax.swing.JRadioButton btnBreads;
    private javax.swing.JRadioButton btnBrownies;
    private javax.swing.JRadioButton btnCake;
    private javax.swing.JRadioButton btnCookies;
    private javax.swing.JRadioButton btnDoughnuts;
    private javax.swing.JRadioButton btnMuffins;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel centerPanel;
    private javax.swing.JButton clearBtn;
    private javax.swing.JComboBox<String> comboCategory;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JMenu editMenu;
    private javax.swing.JLabel email;
    private javax.swing.JCheckBox fF;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JCheckBox hC;
    private javax.swing.JMenuItem helpMenu;
    private javax.swing.JPanel home;
    private javax.swing.JPanel homeBtn;
    private javax.swing.JPanel itemBtn;
    private javax.swing.JTextField itemID;
    private javax.swing.JTextField itemIngredients;
    private javax.swing.JTextField itemName;
    private javax.swing.JTextField itemPrice;
    private javax.swing.JTextField itemQuantity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField linearSearch;
    private javax.swing.JMenuItem openMenu;
    private javax.swing.JLabel phnNumber;
    private javax.swing.JButton searchItem;
    private javax.swing.JPanel tableBtn;
    private javax.swing.JButton updateBtn;
    private javax.swing.JCheckBox wC;
    // End of variables declaration//GEN-END:variables
  
}
